# ~/ska-cavern-dev/config/nginx/posixmapper-proxy.conf
server {
    listen 8080;
    listen [::]:8080;

    server_name localhost;

    # IMPORTANT: Order matters in Nginx. More specific locations should come first.

    # 1. Handle the specific '/posix-mapper/resource-caps' path with a dummy XML file
        # This is to satisfy Cavern's persistent request for a file at this exact path, expecting XML.
        location /posix-mapper/resource-caps {
            root /etc/nginx; # Assumes dummy-resource-caps.xml is mounted to /etc/nginx/dummy-resource-caps.xml
            default_type "application/xml"; # Serve as XML
            try_files /dummy-resource-caps.xml =404; # Serve the dummy XML file
        }

    # 2. Proxy the main capabilities endpoint (XML) to posixmapper
    # This serves the actual VOSI capabilities XML.
    location /posix-mapper/capabilities {
        proxy_pass http://posixmapper:8080/posix-mapper/capabilities;
        # add_header Content-Type "application/xml"; # Uncomment if posixmapper isn't setting it correctly
    }

    # 3. Proxy all other /posix-mapper/ requests to the actual posixmapper service
    location /posix-mapper/ {
        proxy_pass http://posixmapper:8080/posix-mapper/;
    }

    # --- OIDC CONFIGURATION (from your original file) ---
    location /oidc/.well-known/openid-configuration {
        add_header Content-Type application/json;
        root /etc/nginx;
        try_files /oidc_static/openid-configuration.json =404;
    }

    location /oidc/userinfo {
        add_header Content-Type application/json;
        root /etc/nginx;
        try_files /oidc_static/userinfo.json =404;
    }

    location /oidc/jwks {
        add_header Content-Type application/json;
        root /etc/nginx;
        try_files /oidc_static/jwks.json =404;
    }

    # Placeholder endpoints for authorization and token
    location /oidc/auth {
        return 200 'Authorization endpoint placeholder';
        add_header Content-Type text/plain;
    }

    location /oidc/token {
        return 200 'Token endpoint placeholder';
        add_header Content-Type text/plain;
    }

    # Optional general catch-all (if needed, but not in your provided config)
    # location / {
    #     root /usr/share/nginx/html;
    #     try_files $uri $uri/ =404;
    # }
}

