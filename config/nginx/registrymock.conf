# ~/ska-src-dm-local-data-preparer/nginx/registrymock.conf
server {
    listen 8080; # Nginx must listen on container's internal port 8080
    listen [::]:8080;

    server_name localhost;

    # Existing configuration for resource-caps
    location /reg/resource-caps {
        root /usr/share/nginx/html; # This defines the base for Nginx to look for files
        default_type "text/plain"; # For .properties files, use text/plain
        try_files /reg/resource-caps.properties =404;
    }

    # --- OIDC CONFIGURATION ---
    # Base path for OIDC. We'll serve files from /etc/nginx/oidc_static
    location /oidc/.well-known/openid-configuration {
        add_header Content-Type application/json;
        root /etc/nginx; # Nginx will look for /etc/nginx/oidc_static/openid-configuration.json
        try_files /oidc_static/openid-configuration.json =404;
    }

    location /oidc/userinfo {
        add_header Content-Type application/json;
        root /etc/nginx; # Nginx will look for /etc/nginx/oidc_static/userinfo.json
        try_files /oidc_static/userinfo.json =404;
    }

    location /oidc/jwks {
        add_header Content-Type application/json;
        root /etc/nginx; # Nginx will look for /etc/nginx/oidc_static/jwks.json
        try_files /oidc_static/jwks.json =404;
    }

    # Placeholder endpoints for authorization and token, in case Cavern makes requests
    # In a simple dev mock, these often just need to exist and return success.
    location /oidc/auth {
        return 200 'Authorization endpoint placeholder';
        add_header Content-Type text/plain;
    }

    location /oidc/token {
        return 200 'Token endpoint placeholder';
        add_header Content-Type text/plain;
    }

    # It's also good practice to have a general catch-all if other assets are served
    # location / {
    #     root /usr/share/nginx/html;
    #     try_files $uri $uri/ =404;
    # }
}
