version: '3.5'

services:
  core:
    container_name: ska-src-local-data-preparer-core
    build:
      context: ${HOME}/ska-src-dm-local-data-preparer
      dockerfile: Dockerfile
    environment:
      PREPARE_DATA_APPROACH: copy_to_user_area
      ABS_PATH_USER_AREA_ROOT: /users/cavern/home
      ABS_PATH_RSE_ROOT: /rse/deterministic
      CELERY_BROKER_URL: amqp://guest@rabbitmq//
      ABS_PATH_CELERY_RESULTS: /var/celery/results
      CAVERN_API_URL: "https://haproxy:443/cavern"
      CAVERN_API_TOKEN: "your_local_test_token"
    # ports:
    #   - "8000:8000"
    networks:
      - skao-src-network
    depends_on:
      - celery-worker
      - cavern
      - haproxy
    volumes:
      - ./data/cavern_data:/users/cavern/home:rw
      - ./data/rse_data:/rse/deterministic:ro
      - ./logs/celery_results:/var/celery/results:rw

  celery-worker:
    container_name: ska-src-local-data-preparer-celery-worker
    build:
      context: ${HOME}/ska-src-dm-local-data-preparer
      dockerfile: Dockerfile.celery-worker
    environment:
      CELERY_BROKER_URL: amqp://guest@rabbitmq//
      ABS_PATH_CELERY_RESULTS: /var/celery/results
      CAVERN_API_URL: "https://haproxy:443/cavern"
      CAVERN_API_TOKEN: "your_local_test_token"
    command: celery -A prepare_data.worker worker --loglevel=info -c 1
    networks:
      - skao-src-network
    depends_on:
      - rabbitmq
      - cavern
      - haproxy
    volumes:
      - ./data/cavern_data:/users/cavern/home:rw
      - ./data/rse_data:/rse/deterministic:ro
      - ./logs/celery_results:/var/celery/results:rw

  rabbitmq:
    container_name: ska-src-local-data-preparer-rabbitmq
    image: rabbitmq:3.12-management
    # ports:
    #   - "5672:5672"
    #   - "15672:15672"
    networks:
      skao-src-network:
        ipv4_address: 172.27.0.10

  postgres_cavern:
    image: postgres:15-alpine
    container_name: postgres_cavern
    environment:
      POSTGRES_DB: cavern_db
      POSTGRES_USER: cavern_user
      POSTGRES_PASSWORD: cavern_password
    volumes:
      - ./data/db_init_cavern:/docker-entrypoint-initdb.d:ro
      - postgres_cavern_data:/var/lib/postgresql/data
    networks:
      - skao-src-network

  postgres_posixmapper:
    image: postgres:13.2
    container_name: postgres_posixmapper
    environment:
      POSTGRES_DB: mapping
      POSTGRES_USER: posixmapper
      POSTGRES_PASSWORD: posixmapperpwd
    volumes:
      - ./data/db_init_posixmapper:/docker-entrypoint-initdb.d:ro
      - postgres_posixmapper_data:/var/lib/postgresql/data
    networks:
      - skao-src-network
    # ports:
    #   - "5432:5432"

  haproxy:
    container_name: ska-src-local-data-preparer-haproxy
    image: haproxytech/haproxy-debian:latest
    # This is the only essential port we need to expose
    ports:
      - "9443:443"
    volumes:
      - ./config/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - ./config/haproxy/haproxy.pem:/usr/local/etc/haproxy/haproxy.pem:ro
    networks:
      skao-src-network:
        ipv4_address: 172.27.0.2
    depends_on:
      - cavern
      - posixmapper

  posixmapper:
    container_name: ska-src-local-data-preparer-posixmapper
    image: images.opencadc.org/platform/posix-mapper:0.3.1
    # ports:
    #   - "8082:8080"
    environment:
      JAVA_OPTS: >
        -Dorg.opencadc.cadcregistry.config.file=/config/cadc-registry.properties
        -Djava.util.logging.config.file=/config/logging.properties
        -Djavax.sql.DataSource.Factory=org.apache.tomcat.dbcp.dbcp2.BasicDataSourceFactory
        -DPOSIX_MAPPER_MAX_ACTIVE=8
        -DPOSIX_MAPPER_USERNAME=posixmapper
        -DPOSIX_MAPPER_PASSWORD=posixmapperpwd
        -DPOSIX_MAPPER_URL=jdbc:postgresql://postgres_posixmapper:5432/mapping
    volumes:
      - ./config/common:/config:ro
    networks:
      skao-src-network:
        ipv4_address: 172.27.0.11
    depends_on:
      - postgres_posixmapper
      - registrymock

  cavern:
    container_name: ska-src-local-data-preparer-cavern
    image: images.opencadc.org/platform/cavern:0.8.2
    volumes:
      - ./data/cavern_data:/data/cavern_files:rw
      - ./config/common:/config:ro
    environment:
      JAVA_OPTS: >
        -Dorg.opencadc.cavern.config.file=/config/cavern.properties
        -Dorg.opencadc.cadcregistry.config.file=/config/cadc-registry.properties
        -Djava.util.logging.config.file=/config/logging.properties
        -Dlog4j.configuration=file:/config/log4j.properties
        -Dca.nrc.cadc.util.PropertiesReader.dir=/config
    user: root:root
    networks:
      skao-src-network:
        ipv4_address: 172.27.0.12
    depends_on:
      - postgres_cavern
      - posixmapper
      - registrymock
    entrypoint: |
      /bin/bash -c "
        echo '--> Waiting for posixmapper service to be available at http://172.27.0.11:8080...'
        while ! curl -s --fail http://172.27.0.11:8080/posix-mapper/capabilities > /dev/null; do
          printf '.'
          sleep 2
        done
        echo
        echo '--> Posixmapper is up! Starting Cavern service...'
        exec /usr/bin/cadc-tomcat-start
      "

  registrymock:
    container_name: ska-src-local-data-preparer-registrymock
    image: nginx:alpine
    # ports:
    #   - "8083:8080"
    volumes:
      - ./config/common/reg:/usr/share/nginx/html/reg:ro
      - ./config/nginx/registrymock.conf:/etc/nginx/conf.d/registrymock.conf:ro
      - ./config/nginx/oidc_files:/etc/nginx/oidc_static:ro
    networks:
      skao-src-network:
        ipv4_address: 172.27.0.13

networks:
  skao-src-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.27.0.0/16

volumes:
  postgres_cavern_data:
  postgres_posixmapper_data:
  rabbitmq_data: