    # ~/ska-src-dm-local-data-preparer/nginx/registrymock.conf
    server {
        listen 8080;
        listen [::]:8080;

        server_name localhost;

        # Changed to serve resource-caps.xml at a more explicit path: /reg/resource-caps.xml
        location /reg/resource-caps.xml {
            root /usr/share/nginx/html;
            default_type "application/xml"; # Set Content-Type to XML
            try_files /reg/resource-caps.xml =404; # Serve the XML file
        }
        location /reg/resource-caps {
            root /usr/share/nginx/html/reg; # Assumes resource-caps.properties is in this mounted directory
            default_type "text/plain"; # Ensure it's served as plain text
            try_files /resource-caps.properties =404; # Serve the dummy properties file
        }

        # The original /reg/resource-caps path that Cavern was trying to load as properties
        # We will now make this return a 404 to force Cavern to use the correct XML path.
        location /reg/resource-caps {
            return 404;
        }

        # ... (rest of the OIDC configuration) ...
        location /oidc/.well-known/openid-configuration {
            add_header Content-Type application/json;
            root /etc/nginx; # Nginx will look for /etc/nginx/oidc_static/openid-configuration.json
            try_files /oidc_static/openid-configuration.json =404;
        }

        location /oidc/userinfo {
            add_header Content-Type application/json;
            root /etc/nginx; # Nginx will look for /etc/nginx/oidc_static/userinfo.json
            try_files /oidc_static/userinfo.json =404;
        }

        location /oidc/jwks {
            add_header Content-Type application/json;
            root /etc/nginx; # Nginx will look for /etc/nginx/oidc_static/jwks.json
            try_files /oidc_static/jwks.json =404;
        }

        # Placeholder endpoints for authorization and token, in case Cavern makes requests
        location /oidc/auth {
            return 200 'Authorization endpoint placeholder';
            add_header Content-Type text/plain;
        }

        location /oidc/token {
            return 200 'Token endpoint placeholder';
            add_header Content-Type text/plain;
        }
    }

